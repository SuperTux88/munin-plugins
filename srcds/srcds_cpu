#!/bin/bash

: <<=cut

=head1 NAME

srcds_cpu - Plugin to monitor CPU usage, for srcds servers.

=head1 CONFIGURATION

There is no default configuration. This is an example:

  [srcds_cpu]
     user root
     env.ports 27015 27016

The ports are used to grep with directly.

=head1 MAGIC MARKERS

  #%# family=manual
  #%# capabilities=autoconf

=head1 AUTHOR

Benjamin Neff <benjamin@coding4coffee.ch>

=head1 LICENSE

GPLv2

=cut

if [ "$1" = "autoconf" ] ; then 
	if [ -n "$ports" ] ; then
		echo "yes"
	else
		echo "\$ports not defined."
	fi
	exit
fi

if [ "$1" = "config" ] ; then
	echo "graph_args --base 1000 -r --lower-limit 0";
	echo "graph_title Gameserver CPU usage";
	echo "graph_category sourceds";
	echo "graph_info This graph shows CPU usage, for monitored gameservers.";
	echo 'graph_vlabel %'
	echo 'graph_scale no'
	echo 'graph_period second'

	echo "graph_order $ports"

	for port in $ports; do  
		echo "${port}.label port $port"
		echo "${port}.info CPU used by gameserver port $port"
		echo "${port}.type GAUGE"
	done

	exit
fi


ps -o time,args -C srcds_linux | while read line; do
	for port in $ports ; do
		if [[ $line =~ "$port" ]]; then
			statefile=$MUNIN_STATEFILE-$port
			if [ -f $statefile ]; then
				old_seconds=$(<$statefile)
			else
				old_seconds=0
			fi
			seconds=$(echo $line | cut -d ' ' -f 1 | awk -F':' '{if (NF == 2) {print $1 * 60 + $2} else {print $1 * 60 * 60 + $2 * 60 + $3}}')
			echo $seconds > $statefile
			if [ "$seconds" -ge "$old_seconds" ]; then
				seconds=$(( $seconds - $old_seconds ))
			fi
			if [ "$old_seconds" -eq "0" ]; then
				seconds=0
			fi
			echo "$port.value $( echo "scale=2; $seconds * 100 / (5*60)" | bc )"
		fi
	done
done
