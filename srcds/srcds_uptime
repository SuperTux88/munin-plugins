#!/bin/bash

: <<=cut

=head1 NAME

srcds_cpu - Plugin to monitor CPU usage, for srcds servers.

=head1 CONFIGURATION

There is no default configuration. This is an example:

  [srcds_cpu]
     user root
     env.ports 27015 27016

The ports are used to grep with directly.

=head1 MAGIC MARKERS

  #%# family=manual
  #%# capabilities=autoconf

=head1 AUTHOR

Benjamin Neff <benjamin@coding4coffee.ch>

=head1 LICENSE

GPLv2

=cut

if [ "$1" = "autoconf" ] ; then 
	if [ -n "$ports" ] ; then
		echo "yes"
	else
		echo "\$ports not defined."
	fi
	exit
fi

if [ "$1" = "config" ] ; then
	echo "graph_args --base 1000 -r --lower-limit 0";
	echo "graph_title Gameserver uptime";
	echo "graph_category sourceds";
	echo "graph_info The uptime for Source game server, such as TF2, L4D2, HL2, CS:S and DoD:S.";
	echo 'graph_vlabel  Uptime (hours)'

	echo "graph_order $ports"

	for port in $ports; do
		echo "${port}.label port $port"
		echo "${port}.info Uptime of gameserver port $port"
		echo "${port}.type GAUGE"
	done

	exit
fi


ps -o etime,args -C srcds_linux | while read line; do
	for port in $ports ; do
		if [[ $line =~ "$port" ]]; then
			uptime=$(echo $line | cut -d ' ' -f 1)
			if [[ $uptime =~ "-" ]]; then
				uptime_days=$(echo $uptime | cut -d '-' -f 1)
				uptime_hours=$(echo $uptime | cut -d '-' -f 2)
			else
				uptime_days=0
				uptime_hours=$uptime
			fi
			seconds=$(echo $uptime_hours | awk -F':' '{if (NF == 2) {print $1 * 60 + $2} else {print $1 * 60 * 60 + $2 * 60 + $3}}')
			hours=$( echo "scale=3; ($seconds / 3600) + (24 * $uptime_days)" | bc )
			echo "$port.value $hours"
		fi
	done
done
